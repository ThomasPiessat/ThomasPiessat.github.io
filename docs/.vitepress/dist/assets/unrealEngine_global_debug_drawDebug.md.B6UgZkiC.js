import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.DRADY2L-.js";const g=JSON.parse('{"title":"Draw Debug","description":"","frontmatter":{"prev":{"text":"Debug","link":"/UnrealEngine/global/debug/debug"}},"headers":[],"relativePath":"unrealEngine/global/debug/drawDebug.md","filePath":"unrealEngine/global/debug/drawDebug.md","lastUpdated":null}'),h={name:"unrealEngine/global/debug/drawDebug.md"};function e(l,s,k,p,r,E){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="draw-debug" tabindex="-1">Draw Debug <a class="header-anchor" href="#draw-debug" aria-label="Permalink to &quot;Draw Debug&quot;">​</a></h1><h2 id="draw-debug-string" tabindex="-1">Draw Debug String <a class="header-anchor" href="#draw-debug-string" aria-label="Permalink to &quot;Draw Debug String&quot;">​</a></h2><p>DrawDebugString, DrawDebugLine, and other similar functions only work during gameplay — they rely on PlayerControllers and HUDs that don&#39;t exist when the editor itself is running . That means:</p><p>✅ You&#39;ll see debug text during Play In Editor (PIE) or Standalone play sessions.</p><p>❌ You won’t see DrawDebugString output in the editor viewport, even in construction scripts.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FVector</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WorldPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WorldPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Slightly above the ground</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextDuration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FString DebugText </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;THIS IS A DEBUG TEXT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DrawDebugString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), TextLocation, DebugText, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nullptr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::White, TextDuration, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="text-render" tabindex="-1">Text Render <a class="header-anchor" href="#text-render" aria-label="Permalink to &quot;Text Render&quot;">​</a></h2><p>If you want debug text visible in the editor viewport, even when not playing:</p><p>Attach a <em><strong>UTextRenderComponent</strong></em> to your actor and update its text dynamically. It&#39;s visible in both the editor and runtime, but will appear as 3D world-space text.</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UTextRenderComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TextComp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NewObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTextRenderComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FText</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FromString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Text));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetWorldSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetHorizontalAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EHTA_Center);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetVerticalAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EVRTA_TextCenter);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetTextRenderColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Yellow);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetupAttachment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RootComponent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RegisterComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    FVector</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LabelOffset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Slightly above the ground</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TextComp-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetWorldLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LabelOffset);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    CellLabels.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TextComp);</span></span></code></pre></div><h2 id="draw-debug-line" tabindex="-1">Draw Debug Line <a class="header-anchor" href="#draw-debug-line" aria-label="Permalink to &quot;Draw Debug Line&quot;">​</a></h2><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DrawDebugLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(World, LastPoint, FirstPoint, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::Green, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Duration, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,12)])])}const o=i(h,[["render",e]]);export{g as __pageData,o as default};
