import{_ as e,c as i,o as a,a4 as t}from"./chunks/framework.bQ0x2aEl.js";const n="/assets/BottleneckInvestigation.DcnkLXsm.png",m=JSON.parse('{"title":"Profiling","description":"","frontmatter":{},"headers":[],"relativePath":"UnrealEngine/UE4/profiling.md","filePath":"UnrealEngine/UE4/profiling.md","lastUpdated":1686230455000}'),s={name:"UnrealEngine/UE4/profiling.md"},l=t(`<h1 id="profiling" tabindex="-1">Profiling <a class="header-anchor" href="#profiling" aria-label="Permalink to &quot;Profiling&quot;">​</a></h1><h2 id="understand-the-engine-debug-options" tabindex="-1">Understand the engine debug options <a class="header-anchor" href="#understand-the-engine-debug-options" aria-label="Permalink to &quot;Understand the engine debug options&quot;">​</a></h2><ul><li>If capturing GPU: enable detailed draw call name events etc</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">r.RHISSetGPUCaptureOptions</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><ul><li>If capturing CPU: enable detailed callstack information</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">statNamedEvents</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">statVerboseNamedEvents</span></span></code></pre></div><ul><li>Some tools might need extra variables enabled to be supported</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bEnableMemoryAnalyser</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bEnablePIXProfiling</span></span></code></pre></div><h2 id="consider-profiling-setup" tabindex="-1">Consider Profiling Setup <a class="header-anchor" href="#consider-profiling-setup" aria-label="Permalink to &quot;Consider Profiling Setup&quot;">​</a></h2><ul><li>Remove all optimasation that adjust frame based on frametime (vsync, smooth framerate, dynamic resolution)</li><li>Create a deterministic replay scenario</li><li>Add automated profiling/capture recording (PIX, playstation profiling)</li></ul><h2 id="explore-profiling" tabindex="-1">Explore Profiling <a class="header-anchor" href="#explore-profiling" aria-label="Permalink to &quot;Explore Profiling&quot;">​</a></h2><ul><li>Explore the scene with visual Viewports, show commands (for ex to only see LODs of a certain level), stats on screen</li></ul><h2 id="bottleneck-investigation" tabindex="-1">Bottleneck Investigation <a class="header-anchor" href="#bottleneck-investigation" aria-label="Permalink to &quot;Bottleneck Investigation&quot;">​</a></h2><img src="`+n+'" alt="Bottleneck Investigation">',14),o=[l];function r(p,d,h,c,g,u){return a(),i("div",null,o)}const f=e(s,[["render",r]]);export{m as __pageData,f as default};
