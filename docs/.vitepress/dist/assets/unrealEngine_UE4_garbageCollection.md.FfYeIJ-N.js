import{_ as a,c as s,o as t,ag as l}from"./chunks/framework.DRADY2L-.js";const i="/assets/HeapAllocation.B1iETNtj.png",n="/assets/ReferenceCounting.DyP5mCV8.png",m=JSON.parse('{"title":"Garbage Collection","description":"","frontmatter":{},"headers":[],"relativePath":"unrealEngine/UE4/garbageCollection.md","filePath":"unrealEngine/UE4/garbageCollection.md","lastUpdated":null}'),o={name:"unrealEngine/UE4/garbageCollection.md"};function c(r,e,p,d,g,h){return t(),s("div",null,[...e[0]||(e[0]=[l('<h1 id="garbage-collection" tabindex="-1">Garbage Collection <a class="header-anchor" href="#garbage-collection" aria-label="Permalink to &quot;Garbage Collection&quot;">​</a></h1><h2 id="raw-c-c-heap-allocation" tabindex="-1">Raw C &amp; C++ Heap Allocation <a class="header-anchor" href="#raw-c-c-heap-allocation" aria-label="Permalink to &quot;Raw C &amp; C++ Heap Allocation&quot;">​</a></h2><p>Manual Memory Management</p><img src="'+i+'" alt="Heap Allocation"><h2 id="reference-counting-smart-pointers" tabindex="-1">Reference Counting (Smart Pointers) <a class="header-anchor" href="#reference-counting-smart-pointers" aria-label="Permalink to &quot;Reference Counting (Smart Pointers)&quot;">​</a></h2><p>Automatic Memory Management</p><img src="'+n+'" alt="Reference Counting"><h2 id="usefull-gc-commands" tabindex="-1">Usefull GC Commands <a class="header-anchor" href="#usefull-gc-commands" aria-label="Permalink to &quot;Usefull GC Commands&quot;">​</a></h2><ul><li>Useful for debugging crashes and stress tests</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gc.ForceCollectGarbageEveryFrame</span></span></code></pre></div><ul><li>Logs all UObjects in the Root Set</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ListRootSetObjects</span></span></code></pre></div><ul><li>Logs unreleased garbage objects Set to 2 to do dump a sample</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gc.GarbageReferenceTrackingEnabled</span></span></code></pre></div><ul><li>Small summery of cluster</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gc.ListClusters</span></span></code></pre></div>',16)])])}const b=a(o,[["render",c]]);export{m as __pageData,b as default};
