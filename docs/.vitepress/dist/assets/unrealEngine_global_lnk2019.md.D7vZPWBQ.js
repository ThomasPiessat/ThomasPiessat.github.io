import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.DRADY2L-.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"unrealEngine/global/lnk2019.md","filePath":"unrealEngine/global/lnk2019.md","lastUpdated":null}'),t={name:"unrealEngine/global/lnk2019.md"};function l(p,s,h,k,d,r){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="linker-error-not-finding-implementation" tabindex="-1">Linker error - Not finding implementation <a class="header-anchor" href="#linker-error-not-finding-implementation" aria-label="Permalink to &quot;Linker error - Not finding implementation&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#include &quot;IPluginManager.h&quot;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LNK2019:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unresolved</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> external</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> symbol</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__declspec(dllimport) public: static class IPluginManager &amp; __cdecl     IPluginManager::Get(void)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (__imp_?Get@IPluginManager@@SAAEAV1@XZ) unresolved to which reference is made in the function </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;private: static class FString __cdecl  FXXXXXToolStyle::InContent(class FString const &amp;,char const *)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InContent@FXXXXToolStyle@@CA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AVFString@@AEBV2@PEBD@Z)</span></span></code></pre></div><p>In order to access the <code>IPluginManager.h</code> header file you need to add the “Projects” dependency on your plugin’s dependencies That means opening the <code>xxxx.build.cs</code> and adding to Private dependencies “Projects” on the list</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PrivateDependencyModuleNames.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> string[]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;CoreUObject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;Engine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;Slate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">		&quot;SlateCore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted has-focus"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;Project&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// ... add private dependencies that you statically link with here ...	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,5)])])}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
